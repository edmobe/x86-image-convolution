Microsoft (R) Macro Assembler Version 14.25.28614.0	    05/24/20 17:35:18
CreateFile.asm						     Page 1 - 1


				; Proyecto individual 1
				; Eduardo Moya

				INCLUDE Irvine32.inc  
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 
				INCLUDE macros.inc
			      C .NOLIST
			      C .LIST
			      C 


 = 0013D620			BUFFER_SIZE_IN = 1300000			; Read File Buffer

 00000000			.data
				; Constants to define
 = 000003C0			imageWidth = 960
 = 00000500			imageHeight	= 1280
 = 0012C000			imageResolution	= 1228800				; width x height
 = 0012AA74			extendedImageSize = 1223284				; (width + 2) x (height + 2)

				; File read
 00000000  0013D620 [		imageArray		BYTE BUFFER_SIZE_IN DUP(?) 
	    00
	   ]
 0013D620 69 6E 70 75 74	fileNameIn		BYTE "input.txt",0
	   2E 74 78 74 00
 0013D62A 00000000		fileHandleIn	HANDLE ?

				; Convolution
 0013D62E 0000			imageWidthExtended		WORD ?
 0013D630 0000			imageHeightExtended		WORD ?
 0013D632 00000000		pixelsIn				DWORD ? 
 0013D636  0012C000 [		sharpeningKernel		BYTE imageResolution DUP(0)
	    00
	   ]
 00269636 0000			sum						WORD 0
 00269638 0000			imageRowCounter			WORD 0
 0026963A 0000			imageColumnCounter		WORD 0
 0026963C 00			kernelRowCounter		BYTE 0
 0026963D 00			kernelColumnCounter		BYTE 0
 0026963E 00			kernelCounter			BYTE 0
 0026963F 00000000		kernelRowOffset			DWORD 0
 00269643 00000000		kernelColumnOffset		DWORD 0
 00269647 00000000		imageRowOffset			DWORD 0
 0026964B 00000000		imageColumnOffset		DWORD 0
 0026964F 00000000		sharpenedImageCounter	DWORD 0
 00269653 00			newImage				BYTE 0
 00269654  0012C000 [		sharpenedImage			BYTE imageResolution DUP(0)
	    00
	   ]

				; File Write
 00395654  0012C000 [		bufferOut		BYTE imageResolution DUP(?)
	    00
	   ]
 004C1654 6E 6F 72 6D 53	fileNameOut		BYTE "normSharpened.txt", 0
	   68 61 72 70 65
	   6E 65 64 2E 74
	   78 74 00
 004C1666 00000000		fileHandleOut	HANDLE ?
 004C166A 00000000		bytesWrittenOut DWORD ?
 004C166E 43 61 6E 6E 6F	str1Out			BYTE "Cannot create file",0dh,0ah,0	
	   74 20 63 72 65
	   61 74 65 20 66
	   69 6C 65 0D 0A
	   00
 004C1683 42 79 74 65 73	str2Out			BYTE "Bytes written to file [output.txt]: ",0
	   20 77 72 69 74
	   74 65 6E 20 74
	   6F 20 66 69 6C
	   65 20 5B 6F 75
	   74 70 75 74 2E
	   74 78 74 5D 3A
	   20 00
 004C16A8 45 6E 74 65 72	str3Out			BYTE "Enter up to 500 characters and press "
	   20 75 70 20 74
	   6F 20 35 30 30
	   20 63 68 61 72
	   61 63 74 65 72
	   73 20 61 6E 64
	   20 70 72 65 73
	   73 20
 004C16CD  5B 45 6E 74 65					BYTE "[Enter]: ",0dh,0ah,0
	   72 5D 3A 20 0D
	   0A 00
 004C16D9 31 2C 32 2C 33	str4Out			BYTE "1,2,3",0dh,0ah,"4,5,6",0dh,0ah,"7,8,9",0dh,0ah,0
	   0D 0A 34 2C 35
	   2C 36 0D 0A 37
	   2C 38 2C 39 0D
	   0A 00


 00000000			.code

 00000000			main PROC
				; -------------------- READ FILE ------------------------
				; Let user input a filename.
 00000000  BA 0013D620 R		mov edx,OFFSET fileNameIn
 00000005  B9 0000000A			mov ecx,SIZEOF fileNameIn

				; Open the file for input.
 0000000A  BA 0013D620 R		mov edx,OFFSET fileNameIn
 0000000F  E8 00000000 E		call OpenInputFile
 00000014  A3 0013D62A R		mov fileHandleIn,eax

				; Check for errors.
 00000019  83 F8 FF			cmp eax,INVALID_HANDLE_VALUE ; error opening file?
 0000001C  75 11			jne file_ok_in ; no: skip
					mWrite <"Cannot open file",0dh,0ah>
 004C16EF		     1		.data		
 004C16EF 43 61 6E 6E 6F     1		??0000 BYTE "Cannot open file",0dh,0ah,0	
	   74 20 6F 70 65
	   6E 20 66 69 6C
	   65 0D 0A 00
 0000001E		     1		.code
 0000001E  52		     1		push	edx
 0000001F  BA 004C16EF R     1		mov	edx,OFFSET ??0000
 00000024  E8 00000000 E     1		call	WriteString
 00000029  5A		     1		pop	edx
 0000002A  E9 000003A4			jmp quit ; and quit
					
 0000002F			file_ok_in:
				; Read the file into a buffer.
 0000002F  BA 00000000 R		mov edx,OFFSET imageArray
 00000034  B9 0013D620			mov ecx,BUFFER_SIZE_IN
 00000039  E8 00000000 E		call ReadFromFile
 0000003E  73 13			jnc check_buffer_size ; error reading?
					mWrite "Error reading file. " ; yes: show error message
 004C1702		     1		.data		
 004C1702 45 72 72 6F 72     1		??0001 BYTE "Error reading file. ",0	
	   20 72 65 61 64
	   69 6E 67 20 66
	   69 6C 65 2E 20
	   00
 00000040		     1		.code
 00000040  52		     1		push	edx
 00000041  BA 004C1702 R     1		mov	edx,OFFSET ??0001
 00000046  E8 00000000 E     1		call	WriteString
 0000004B  5A		     1		pop	edx
 0000004C  E8 00000000 E		call WriteWindowsMsg
 00000051  EB 50			jmp close_file

 00000053			check_buffer_size:
 00000053  3D 0013D620			cmp eax,BUFFER_SIZE_IN; buffer large enough?
 00000058  72 11			jb buf_size_ok ; yes
					mWrite <"Error: Buffer too small for the file",0dh,0ah>
 004C1717		     1		.data		
 004C1717 45 72 72 6F 72     1		??0002 BYTE "Error: Buffer too small for the file",0dh,0ah,0	
	   3A 20 42 75 66
	   66 65 72 20 74
	   6F 6F 20 73 6D
	   61 6C 6C 20 66
	   6F 72 20 74 68
	   65 20 66 69 6C
	   65 0D 0A 00
 0000005A		     1		.code
 0000005A  52		     1		push	edx
 0000005B  BA 004C1717 R     1		mov	edx,OFFSET ??0002
 00000060  E8 00000000 E     1		call	WriteString
 00000065  5A		     1		pop	edx
 00000066  E9 00000368			jmp quit

 0000006B			buf_size_ok:
 0000006B  C6 80 00000000 R		mov imageArray[eax],0 ; insert null terminator
	   00
					mWrite "File size: "
 004C173E		     1		.data		
 004C173E 46 69 6C 65 20     1		??0003 BYTE "File size: ",0	
	   73 69 7A 65 3A
	   20 00
 00000072		     1		.code
 00000072  52		     1		push	edx
 00000073  BA 004C173E R     1		mov	edx,OFFSET ??0003
 00000078  E8 00000000 E     1		call	WriteString
 0000007D  5A		     1		pop	edx
 0000007E  E8 00000000 E		call WriteDec ; display file size
 00000083  E8 00000000 E		call Crlf

				; Display the buffer.
					mWrite <"Buffer:",0dh,0ah,0dh,0ah>
 004C174A		     1		.data		
 004C174A 42 75 66 66 65     1		??0004 BYTE "Buffer:",0dh,0ah,0dh,0ah,0	
	   72 3A 0D 0A 0D
	   0A 00
 00000088		     1		.code
 00000088  52		     1		push	edx
 00000089  BA 004C174A R     1		mov	edx,OFFSET ??0004
 0000008E  E8 00000000 E     1		call	WriteString
 00000093  5A		     1		pop	edx
 00000094  BA 00000000 R		mov edx,OFFSET imageArray ; display the buffer
 00000099  E8 00000000 E		call WriteString
 0000009E  E8 00000000 E		call Crlf

 000000A3			close_file:
 000000A3  A1 0013D62A R		mov eax,fileHandleIn
 000000A8  E8 00000000 E		call CloseFile

				; ------------------- TRANSFORM BUFFER TO INT ARRAY --------
				; cl: register to hold the char and transform it to integer
				; al: register that holds multiplication results
				; dl: n as in 10^n
				; bl: actual number
 000000AD  FC			cld
 000000AE  66| B8 03C0		mov ax, imageWidth
 000000B2  66| BB 0500		mov bx, imageHeight
 000000B6  66| 83 C0 02		add ax, 2
 000000BA  66| 83 C3 02		add bx, 2
 000000BE  66| A3		mov imageWidthExtended, ax
	   0013D62E R
 000000C4  66| 89 1D		mov imageHeightExtended, bx
	   0013D630 R
 000000CB  66| F7 E3		mul bx
 000000CE  66| 8B DA		mov bx, dx
 000000D1  C1 E3 10		shl ebx, 16
 000000D4  66| 8B D8		mov bx, ax
 000000D7  89 1D 0013D632 R	mov pixelsIn, ebx					; pixelIn = (width+2)x(height+2)
 000000DD  BE 00000000		mov esi, 0							; esi: counter
 000000E2  BF 00000000		mov edi, 0							; edi: pixel counter
 000000E7  B8 00000000		mov eax, 0							
 000000EC  BB 00000000		mov ebx, 0							
 000000F1  B9 00000000		mov ecx, 0							
 000000F6  BA 00000000		mov edx, 0							

				; ----------------------- CONVOLUTION -------------------------
 000000FB			convolution:
 000000FB  C6 05 0013D636 R		mov sharpeningKernel[0], 0
	   00
 00000102  C6 05 0013D637 R		mov sharpeningKernel[1], -1
	   FF
 00000109  C6 05 0013D638 R		mov sharpeningKernel[2], 0
	   00
 00000110  C6 05 0013D639 R		mov sharpeningKernel[3], -1
	   FF
 00000117  C6 05 0013D63A R		mov sharpeningKernel[4], 5
	   05
 0000011E  C6 05 0013D63B R		mov sharpeningKernel[5], -1
	   FF
 00000125  C6 05 0013D63C R		mov sharpeningKernel[6], 0
	   00
 0000012C  C6 05 0013D63D R		mov sharpeningKernel[7], -1
	   FF
 00000133  C6 05 0013D63E R		mov sharpeningKernel[8], 0
	   00
					
 0000013A			new_kernel_row:
 0000013A  8B 1D 0026963F R		mov ebx, kernelRowOffset
 00000140  03 1D 00269643 R		add ebx, kernelColumnOffset
 00000146  03 1D 00269647 R		add ebx, imageRowOffset
 0000014C  03 1D 0026964B R		add ebx, imageColumnOffset
 00000152  8A 8B 00000000 R		mov cl, [imageArray + ebx]
 00000158  BA 00000000			mov edx, 0
 0000015D  8A 15 0026963E R		mov dl, kernelCounter
 00000163  8A 82 0013D636 R		mov al, [sharpeningKernel + edx]
 00000169  66| 98			cbw 
 0000016B  66| F7 E9			imul cx
 0000016E  66| 01 05			add sum, ax
	   00269636 R
 00000175  FE 05 0026963E R		inc kernelCounter
 0000017B  FE 05 0026963C R		inc kernelRowCounter
 00000181  80 3D 0026963C R		cmp kernelRowCounter, 3
	   03
 00000188  74 08			je new_kernel_column
 0000018A  FF 05 0026963F R		inc kernelRowOffset
 00000190  EB A8			jmp new_kernel_row

 00000192			new_kernel_column:
 00000192  FE 05 0026963D R		inc kernelColumnCounter
 00000198  80 3D 0026963D R		cmp kernelColumnCounter, 3
	   03
 0000019F  74 27			je new_image_row
 000001A1  C7 05 0026963F R		mov kernelRowOffset, 0
	   00000000
 000001AB  C6 05 0026963C R		mov kernelRowCounter, 0
	   00
 000001B2  B8 00000000			mov eax, 0
 000001B7  66| A1			mov ax, imageWidthExtended
	   0013D62E R
 000001BD  01 05 00269643 R		add kernelColumnOffset, eax
 000001C3  E9 FFFFFF72			jmp new_kernel_row

 000001C8			new_image_row:
 000001C8  66| A1			mov ax, sum
	   00269636 R
 000001CE  8B 1D 0026964F R		mov ebx, sharpenedImageCounter
 000001D4  66| 83 F8 00			cmp ax, 0
 000001D8  7C 0E			jl less_than_zero
 000001DA  66| 3D 00FF			cmp ax, 255
 000001DE  7F 11			jg over_255
 000001E0  88 83 00269654 R		mov sharpenedImage[ebx], al
 000001E6  EB 10			jmp sum_stored
 000001E8			less_than_zero:
 000001E8  C6 83 00269654 R		mov sharpenedImage[ebx], 0
	   00
 000001EF  EB 07			jmp sum_stored
 000001F1			over_255:
 000001F1  C6 83 00269654 R		mov sharpenedImage[ebx], 255
	   FF
 000001F8			sum_stored:
 000001F8  B8 00000000			mov eax, 0
 000001FD  BB 00000000			mov ebx, 0
 00000202  B9 00000000			mov ecx, 0
 00000207  BA 00000000			mov edx, 0
 0000020C  C7 05 0026963F R		mov kernelRowOffset, 0
	   00000000
 00000216  C7 05 00269643 R		mov kernelColumnOffset, 0
	   00000000
 00000220  C6 05 0026963C R		mov kernelRowCounter, 0
	   00
 00000227  C6 05 0026963D R		mov kernelColumnCounter, 0
	   00
 0000022E  C6 05 0026963E R		mov kernelCounter, 0
	   00
 00000235  66| C7 05			mov sum, 0
	   00269636 R
	   0000
 0000023E  FF 05 00269647 R		inc imageRowOffset
 00000244  FF 05 0026964F R		inc sharpenedImageCounter
 0000024A  66| B8 03C0			mov ax, imageWidth
 0000024E  66| FF 05			inc imageRowCounter
	   00269638 R
 00000255  66| 39 05			cmp imageRowCounter, ax
	   00269638 R
 0000025C  0F 85 FFFFFED8		jne new_kernel_row

 00000262			new_image_column:
 00000262  66| FF 05			inc imageColumnCounter
	   0026963A R
 00000269  66| B8 0500			mov ax, imageHeight
 0000026D  66| 39 05			cmp imageColumnCounter, ax
	   0026963A R
 00000274  74 29			je sharpened
 00000276  66| C7 05			mov imageRowCounter, 0
	   00269638 R
	   0000
 0000027F  C7 05 00269647 R		mov imageRowOffset, 0
	   00000000
 00000289  B8 00000000			mov eax, 0
 0000028E  66| A1			mov ax, imageWidthExtended
	   0013D62E R
 00000294  01 05 0026964B R		add imageColumnOffset, eax
 0000029A  E9 FFFFFE9B			jmp new_kernel_row
					
 0000029F			sharpened:
				; ----------------------- WRITE FILE ------------------------
				; Create a new text file.
 0000029F  BA 004C1654 R		mov	edx, OFFSET fileNameOut
 000002A4  E8 00000000 E		call	CreateOutputFile
 000002A9  A3 004C1666 R		mov	fileHandleOut,eax

				; Check for errors.
 000002AE  83 F8 FF			cmp	eax, INVALID_HANDLE_VALUE	; error found?
 000002B1  75 0F			jne	file_out_ok					; no: skip
 000002B3  BA 004C166E R		mov	edx,OFFSET str1Out			; display error
 000002B8  E8 00000000 E		call	WriteString
 000002BD  E9 00000111			jmp	quit
 000002C2			file_out_ok:
				; Write the buffer to the output file.
 000002C2  A1 004C1666 R		mov	eax,fileHandleOut
 000002C7  BA 00269654 R		mov	edx,OFFSET sharpenedImage
 000002CC  B9 0012C000			mov	ecx,imageResolution
 000002D1  E8 00000000 E		call	WriteToFile
 000002D6  A3 004C166A R		mov	bytesWrittenOut,eax		; save return value
 000002DB  E8 00000000 E		call	CloseFile
					
					COMMENT @
				; Display the return value.
					mov	edx,OFFSET str2Out		; "Bytes written"
					call	WriteString
					mov	eax,bytesWrittenOut
					call	WriteDec
					call	Crlf

					@
					; Do the same process for oversharpening
 000002E0  80 3D 00269653 R		cmp newImage, 1
	   01
 000002E7  0F 84 000000E6		je quit
 000002ED  FE 05 00269653 R		inc newImage
					; Change settings for oversharpening
 000002F3  C6 05 004C1654 R		mov	fileNameOut, "o"
	   6F
 000002FA  C6 05 004C1655 R		mov fileNameOut[1], "v"
	   76
 00000301  C6 05 004C1656 R		mov fileNameOut[2], "e"
	   65
 00000308  C6 05 004C1657 R		mov fileNameOut[3], "r"
	   72
 0000030F  C6 05 0013D636 R		mov sharpeningKernel[0], 0
	   00
 00000316  C6 05 0013D637 R		mov sharpeningKernel[1], -2
	   FE
 0000031D  C6 05 0013D638 R		mov sharpeningKernel[2], 0
	   00
 00000324  C6 05 0013D639 R		mov sharpeningKernel[3], -2
	   FE
 0000032B  C6 05 0013D63A R		mov sharpeningKernel[4], 9
	   09
 00000332  C6 05 0013D63B R		mov sharpeningKernel[5], -2
	   FE
 00000339  C6 05 0013D63C R		mov sharpeningKernel[6], 0
	   00
 00000340  C6 05 0013D63D R		mov sharpeningKernel[7], -2
	   FE
 00000347  C6 05 0013D63E R		mov sharpeningKernel[8], 0
	   00
					; Reset all convolution values
 0000034E  B8 00000000			mov eax, 0
 00000353  BB 00000000			mov ebx, 0
 00000358  B9 00000000			mov ecx, 0
 0000035D  BA 00000000			mov edx, 0
 00000362  BF 00000000			mov edi, 0
 00000367  BE 00000000			mov esi, 0
 0000036C  66| C7 05			mov sum, 0
	   00269636 R
	   0000
 00000375  66| C7 05			mov imageRowCounter, 0
	   00269638 R
	   0000
 0000037E  66| C7 05			mov imageColumnCounter, 0
	   0026963A R
	   0000
 00000387  C6 05 0026963C R		mov kernelRowCounter, 0
	   00
 0000038E  C6 05 0026963D R		mov kernelColumnCounter, 0
	   00
 00000395  C6 05 0026963E R		mov kernelCounter, 0
	   00
 0000039C  C7 05 0026963F R		mov kernelRowOffset, 0
	   00000000
 000003A6  C7 05 00269643 R		mov kernelColumnOffset, 0
	   00000000
 000003B0  C7 05 00269647 R		mov imageRowOffset, 0
	   00000000
 000003BA  C7 05 0026964B R		mov imageColumnOffset, 0
	   00000000
 000003C4  C7 05 0026964F R		mov sharpenedImageCounter, 0
	   00000000
 000003CE  E9 FFFFFD67			jmp new_kernel_row

 000003D3			quit:
					exit
 000003D3  6A 00	   *	    push   +000000000h
 000003D5  E8 00000000 E   *	    call   ExitProcess
 000003DA			main ENDP
				END main
Microsoft (R) Macro Assembler Version 14.25.28614.0	    05/24/20 17:35:18
CreateFile.asm						     Symbols 2 - 1




Macros:

                N a m e                 Type

IsDefined  . . . . . . . . . . .	Func
Startup  . . . . . . . . . . . .	Proc
mDumpMem . . . . . . . . . . . .	Proc
mDump  . . . . . . . . . . . . .	Proc
mGotoxy  . . . . . . . . . . . .	Proc
mReadString  . . . . . . . . . .	Proc
mShowRegister  . . . . . . . . .	Proc
mShow  . . . . . . . . . . . . .	Proc
mWriteLn . . . . . . . . . . . .	Proc
mWriteSpace  . . . . . . . . . .	Proc
mWriteString . . . . . . . . . .	Proc
mWrite . . . . . . . . . . . . .	Proc


Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 004C1756 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000003DA Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 000003DA Public STDCALL
  file_ok_in . . . . . . . . . .	L Near	 0000002F _TEXT	
  check_buffer_size  . . . . . .	L Near	 00000053 _TEXT	
  buf_size_ok  . . . . . . . . .	L Near	 0000006B _TEXT	
  close_file . . . . . . . . . .	L Near	 000000A3 _TEXT	
  convolution  . . . . . . . . .	L Near	 000000FB _TEXT	
  new_kernel_row . . . . . . . .	L Near	 0000013A _TEXT	
  new_kernel_column  . . . . . .	L Near	 00000192 _TEXT	
  new_image_row  . . . . . . . .	L Near	 000001C8 _TEXT	
  less_than_zero . . . . . . . .	L Near	 000001E8 _TEXT	
  over_255 . . . . . . . . . . .	L Near	 000001F1 _TEXT	
  sum_stored . . . . . . . . . .	L Near	 000001F8 _TEXT	
  new_image_column . . . . . . .	L Near	 00000262 _TEXT	
  sharpened  . . . . . . . . . .	L Near	 0000029F _TEXT	
  file_out_ok  . . . . . . . . .	L Near	 000002C2 _TEXT	
  quit . . . . . . . . . . . . .	L Near	 000003D3 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

??0000 . . . . . . . . . . . . .	Byte	 004C16EF _DATA	
??0001 . . . . . . . . . . . . .	Byte	 004C1702 _DATA	
??0002 . . . . . . . . . . . . .	Byte	 004C1717 _DATA	
??0003 . . . . . . . . . . . . .	Byte	 004C173E _DATA	
??0004 . . . . . . . . . . . . .	Byte	 004C174A _DATA	
@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
BUFFER_SIZE_IN . . . . . . . . .	Number	 0013D620h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
bufferOut  . . . . . . . . . . .	Byte	 00395654 _DATA	
bytesWrittenOut  . . . . . . . .	DWord	 004C166A _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
extendedImageSize  . . . . . . .	Number	 0012AA74h   
fileHandleIn . . . . . . . . . .	DWord	 0013D62A _DATA	
fileHandleOut  . . . . . . . . .	DWord	 004C1666 _DATA	
fileNameIn . . . . . . . . . . .	Byte	 0013D620 _DATA	
fileNameOut  . . . . . . . . . .	Byte	 004C1654 _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
imageArray . . . . . . . . . . .	Byte	 00000000 _DATA	
imageColumnCounter . . . . . . .	Word	 0026963A _DATA	
imageColumnOffset  . . . . . . .	DWord	 0026964B _DATA	
imageHeightExtended  . . . . . .	Word	 0013D630 _DATA	
imageHeight  . . . . . . . . . .	Number	 00000500h   
imageResolution  . . . . . . . .	Number	 0012C000h   
imageRowCounter  . . . . . . . .	Word	 00269638 _DATA	
imageRowOffset . . . . . . . . .	DWord	 00269647 _DATA	
imageWidthExtended . . . . . . .	Word	 0013D62E _DATA	
imageWidth . . . . . . . . . . .	Number	 000003C0h   
kernelColumnCounter  . . . . . .	Byte	 0026963D _DATA	
kernelColumnOffset . . . . . . .	DWord	 00269643 _DATA	
kernelCounter  . . . . . . . . .	Byte	 0026963E _DATA	
kernelRowCounter . . . . . . . .	Byte	 0026963C _DATA	
kernelRowOffset  . . . . . . . .	DWord	 0026963F _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
newImage . . . . . . . . . . . .	Byte	 00269653 _DATA	
pixelsIn . . . . . . . . . . . .	DWord	 0013D632 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
sharpenedImageCounter  . . . . .	DWord	 0026964F _DATA	
sharpenedImage . . . . . . . . .	Byte	 00269654 _DATA	
sharpeningKernel . . . . . . . .	Byte	 0013D636 _DATA	
str1Out  . . . . . . . . . . . .	Byte	 004C166E _DATA	
str2Out  . . . . . . . . . . . .	Byte	 004C1683 _DATA	
str3Out  . . . . . . . . . . . .	Byte	 004C16A8 _DATA	
str4Out  . . . . . . . . . . . .	Byte	 004C16D9 _DATA	
sum  . . . . . . . . . . . . . .	Word	 00269636 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
